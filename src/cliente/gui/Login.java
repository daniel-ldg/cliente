package cliente.gui;

import cliente.datos.ApiException;
import cliente.datos.ApiUsuario;
import cliente.datos.AuthException;
import cliente.datos.HttpException;
import cliente.pojo.Usuario;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.net.ConnectException;
import java.net.SocketTimeoutException;
import java.net.UnknownHostException;
import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import javax.swing.JRootPane;
import javax.swing.JTextField;
import javax.swing.LayoutStyle;
import javax.swing.SwingUtilities;
import javax.swing.WindowConstants;

/**
 *
 * @author daniel
 */
public class Login extends javax.swing.JDialog {

    private Usuario usuario;

    /**
     * Creates new form Login
     */
    public Login() {
        super((java.awt.Frame) null, true);
        initComponents();
        this.usuario = null;
        JRootPane rootPane = SwingUtilities.getRootPane(jButton1);
        rootPane.setDefaultButton(jButton1);
    }

    public Usuario getUsuario() {
        return usuario;
    }

    public String getServidor() {
        return this.server.getText();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JLabel jLabel1 = new JLabel();
        JLabel jLabel2 = new JLabel();
        server = new JTextField();
        JLabel jLabel3 = new JLabel();
        email = new JTextField();
        JLabel jLabel4 = new JLabel();
        password = new JPasswordField();
        jButton1 = new JButton();
        jButton2 = new JButton();

        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setIcon(new ImageIcon(getClass().getResource("/cliente/gui/assets/icons8-private2.png"))); // NOI18N

        jLabel2.setText("Servidor");

        server.setText("http://localhost:5000/");

        jLabel3.setText("Email");

        jLabel4.setText("Contrase침a");

        jButton1.setText("Iniciar sesi칩n");
        jButton1.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cancelar");
        jButton2.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(132, 132, 132)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 85, Short.MAX_VALUE)
                                .addComponent(jButton2))
                            .addComponent(jLabel4)
                            .addComponent(jLabel2)
                            .addComponent(server)
                            .addComponent(jLabel3)
                            .addComponent(email)
                            .addComponent(password))))
                .addContainerGap(58, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel1)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(server, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(email, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(password, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(49, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        try {
            ApiUsuario api = new ApiUsuario(this.server.getText());

            Usuario usuarioInfo = new Usuario();
            usuarioInfo.setEmail(this.email.getText());
            usuarioInfo.setPassword(new String(this.password.getPassword()));

            this.usuario = api.tryLogin(usuarioInfo);

        } catch (AuthException e) {
            JOptionPane.showMessageDialog(this, "Usuario no encontrado", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (HttpException e) {
            JOptionPane.showMessageDialog(this, "C칩digo de respuesta HTTP: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } catch (ApiException e) {
            if (e.getCause() instanceof UnknownHostException
                    || e.getCause() instanceof ConnectException
                    || e.getCause() instanceof SocketTimeoutException) {
                JOptionPane.showMessageDialog(this, "No es posible conectar al servidor", "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "No es posible realizar la operaci칩n", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }

        if (this.usuario != null) {
            dispose();
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JTextField email;
    private JButton jButton1;
    private JButton jButton2;
    private JPasswordField password;
    private JTextField server;
    // End of variables declaration//GEN-END:variables
}
